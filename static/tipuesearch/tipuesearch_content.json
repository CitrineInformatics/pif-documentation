{"pages":[{"title":"PIF Documentation","text":"The Physical Information File (PIF) is a schema that is designed to impose structure on information about physical systems. Schema design, as well as tools for working with PIF-formatted files using the python (pypif) and java (jpif) programming languages are maintained by Citrine Informatics. This site will continue to be updated with examples and new definitions as the schema is further developed.","tags":"","url":"index.html"},{"title":"schema definition","text":"The PIF schema definition is broken into two sections: system, which contains information about root level system objects; and common, which contains definitions of objects that are common throughout the PIF schema. A file adheres to the PIF schema if it contains a single System object (or one of its derived types) or an array of such objects. While the schema can be used in potentially any hierarchical file format, all examples in this document use JavaScript Object Notation (JSON). Similarly, software packages developed by Citrine Informatics, including pypif and jpif, support only JSON serializations of the schema at this time.","tags":"","url":"schema_definition\/index.html"},{"title":"common","text":"This package describes objects that are common throughout the PIF schema.","tags":"","url":"schema_definition\/common\/index.html"},{"title":"DisplayItem","text":"Description A display item (figure or table) that appears in a referenced work. Fields Field name Value type Description number String Number of the display item in the referenced work. title String Title of the display item. caption String Caption that appears with the display item. tags Array of strings Tags that apply to the display item. Examples Store the information about a plot 2a that appeared in a referenced work. { &quot;number&quot;: &quot;2a&quot;, &quot;title&quot;: &quot;Band gap vs. temperature&quot;, &quot;description&quot;: &quot;The band gap is presented in units of eV as a function of temperature in K.&quot; }","tags":"","url":"schema_definition\/common\/DisplayItem.html"},{"title":"FileReference","text":"Description A reference to a file. Fields Field name Value type Description relativePath String String with the relative path of file. mimeType String String with the mime type of the file. sha256 String String with the SHA-256 hash of the file. md5 String String with the MD5 hash of the file. tags Array of strings Tags that apply to the ID. Examples","tags":"","url":"schema_definition\/common\/FileReference.html"},{"title":"Id","text":"Description An ID is a named label. Fields Field name Value type Description name String Name of the identifier. value String Value of the identifier. tags Array of strings Tags that apply to the ID. Examples Store the CAS number of MgO2 { &quot;name&quot;: &quot;CAS&quot;, &quot;value&quot;: &quot;1335-26-8&quot; }","tags":"","url":"schema_definition\/common\/Id.html"},{"title":"Instrument","text":"Description An instrument is a piece of physical equipment that was used in a measurement or other application. Fields Field name Value type Description name String Name of the instrument. model String Model of the instrument. producer String Manufacturer of the instrument. url String URL to the website with information about the instrument. tags Array of strings Tags that apply to the instrument. Examples Store information about a Bruker NANOSTAR X-ray diffraction instrument: { &quot;producer&quot;: &quot;Bruker&quot;, &quot;model&quot;: &quot;NANOSTAR&quot;, &quot;url&quot;: &quot;https:\/\/www.bruker.com\/products\/x-ray-diffraction-and-elemental-analysis\/x-ray-diffraction\/nanostar&quot; }","tags":"","url":"schema_definition\/common\/Instrument.html"},{"title":"License","text":"Description A license describes the licensing agreement that is in place for the data in the object in which it is applied. Fields Field name Value type Description name String Name of the license. description String Description of the license. url String URL to the website with information about the license. tags Array of strings Tags that apply to the license. Examples Store the information about the Apache license version 2.0: { &quot;name&quot;: &quot;Apache License 2.0&quot;, &quot;url&quot;: &quot;https:\/\/www.apache.org\/licenses\/LICENSE-2.0&quot; }","tags":"","url":"schema_definition\/common\/License.html"},{"title":"Method","text":"Description Experimental or computational method used to measure a property, or a method used in the preparation of the system. Fields Field name Value type Description name String Name of the method. instruments Array of Instrument objects Instruments that were used in the method. software Array of Software objects Software that was used in the method. tags Array of strings Tags that apply to the method. Examples","tags":"","url":"schema_definition\/common\/Method.html"},{"title":"Name","text":"Description A name applies to a person and includes their given and family names, as well as their title. Fields Field name Value type Description title String Title of a person. given String Given (first) name. family String Family (last) name. suffix String Suffix of the name. tags Array of strings Tags that apply to the name. Examples","tags":"","url":"schema_definition\/common\/Name.html"},{"title":"Pages","text":"Description Information about the start and end pages of a book, research paper, or other document. Fields Field name Value type Description start String First page of the work. end String Last page of the work. tags Array of strings Tags that apply to the pages. Examples","tags":"","url":"schema_definition\/common\/Pages.html"},{"title":"Person","text":"Description Information about a person. Fields Field name Value type Description name Name object Name of the person. email String Email address of the person. orcid String ORCID ID of the person. tags Array of strings Tags that apply to the person. Examples","tags":"","url":"schema_definition\/common\/Person.html"},{"title":"ProcessStep","text":"Description A process step is a single stage in a set of preparation steps. Fields Field name Value type Description name String Name of the process step. details Array of Value objects Details of the process step, such as temperature, applied pressure, or duration. instruments Array of Instrument objects Instruments that were used during the process step. software Array of Software objects Software packages that were used during the process step. tags Array of strings Tags that apply to the process step. Examples","tags":"","url":"schema_definition\/common\/ProcessStep.html"},{"title":"Property","text":"Description A property is a single measured or observed characteristic or response of a system. Exactly one of scalars, vectors, matrices, or files should be set. Any applied conditions should be stored under the conditions field. Two-dimensional data can be stored by setting, for example, N (&gt; 1) values in the scalars field along with a condition that contained N values in its scalars field. Fields Field name Value type Description name String Name of the property. scalars Array of Scalar objects One or more scalar values that were obtained for the property. vectors Array of arrays of Scalar objects One or more arrays of scalars, where each inner array represents a vector that was obtained for the property. matrices Array of arrays of arrays of Scalar objects One or more arrays of arrays of scalars, where each represents a single matrix (with innermost arrays being rows of the matrix). files Array of FileReference objects One or more files that contain information about a property. units String Units of the property value. conditions Array of Value objects External conditions under which the property was measured or observed. methods Array of Method objects Methods that were used in the measurement of the property. dataType &quot;MACHINE_LEARNING&quot;, &quot;FIT&quot;, &quot;COMPUTATIONAL&quot;, or &quot;EXPERIMENTAL&quot; Whether the property was obtained from machine learning, a fit to some data, computational methods, or experiment. references Array of Reference objects References where information about the property is published. contacts Array of Person objects People that can be contacted for further information about the property. licenses Array of License objects Licenses that apply to the data about the property. tags Array of strings Tags that apply to the property. Examples","tags":"","url":"schema_definition\/common\/Property.html"},{"title":"Quantity","text":"Description Information about the quantity of a system. Fields Field name Value type Description actualMassPercent Scalar object Actual percent of the total mass made up by this system. actualVolumePercent Scalar object Actual percent of the total volume made up by this system. actualNumberPercent Scalar object Actual percent of the total number made up by this system. idealMassPercent Scalar object Ideal percent of the total mass made up by this system. idealVolumePercent Scalar object Ideal percent of the total volume made up by this system. idealNumberPercent Scalar object Ideal percent of the total number made up by this system. tags Array of strings Tags that apply to the quantity. Examples","tags":"","url":"schema_definition\/common\/Quantity.html"},{"title":"Reference","text":"Description A published work. Fields Field name Value type Description doi String Digital Object Identifier (DOI) of the work. isbn String International Standard Book Number (ISBN) of the work. issn String International Standard Serial Number (ISSN) of the work. url String URL of the website where the work can be accessed. title String Title of the work. publisher String Publisher of the work. journal String Journal in which the work was published. volume String Volume of the series in which the work was published. issue String Issue of the series in which the work was published. year String Year in which the work was published. figure DisplayItem object A specific figure being referenced. table DisplayItem object A specific table being referenced. pages Pages object Starting and ending pages of the work. authors Array of Name objects Authors of the work. editors Array of Name objects Editors of the work. affiliations Array of strings One or more affiliations of the authors or editors of the work. acknowledgements Array of strings One or more acknowledgements made in the work. references Array of Reference objects Publications cited by the work. tags Array of strings Tags that apply to the reference. Examples","tags":"","url":"schema_definition\/common\/Reference.html"},{"title":"Scalar","text":"Description A single value that can represent an absolute value, an uncertain value, a range of values, a minimum, or a maximum. Fields Field name Value type Description value String Exact value. minimum String Minimum value. inclusiveMinimum Boolean (True or False) Whether the minimum is inclusive. maximum String Maximum value. inclusiveMaximum Boolean (True or False) Whether the maximum is inclusive. uncertainty String Uncertainty in the value. approximate Boolean (True or False) Whether the value is approximate. tags Array of strings Tags that apply to the scalar. Examples","tags":"","url":"schema_definition\/common\/Scalar.html"},{"title":"Software","text":"Description Software is a single software application used in a measurement or processing step. Fields Field name Value type Description name String Name of the software application. version String Version of the software application. producer String Producer of the software. url String URL at which the software can be accessed. tags Array of strings Tags that apply to the software. Examples","tags":"","url":"schema_definition\/common\/Software.html"},{"title":"Source","text":"Description Source objects are used to store information about the source (producer) of a system. Fields Field name Value type Description producer String Producer of the system. url String URL at which the system can be accessed. tags Array of strings Tags that apply to the system. Examples","tags":"","url":"schema_definition\/common\/Source.html"},{"title":"Value","text":"Description A single scalar, vector, or matrix, or an array of one of those. Exactly one of scalars, vectors, or matrices should be set. Fields Field name Value type Description name String Name of the value. scalars Array of Scalar objects One or more scalar values. vectors Array of arrays of Scalar objects One or more arrays of scalars, where each inner array represents a vector. matrices Array of arrays of arrays of Scalar objects One or more arrays of arrays of scalars, where each represents a single matrix (with innermost arrays being rows of the matrix). files Array of FileReference objects One or more files that contain information about a value. units String Units of the value. tags Array of strings Tags that apply to the value. Examples","tags":"","url":"schema_definition\/common\/Value.html"},{"title":"system","text":"A system is a root level object in a PIF record. Systems contain three general categories of information: Identifiers - What is this? Preparation - How was this made? Properties - How does this perform and what are its characteristics? Additionally, systems can contain publication information for the system, contact information for people that worked on or the system, and licensing information. A System object is the most generic root object in a PIF record and contains fields that could apply to any physical system. For more specialized use cases, the System type is sub-classed and fields appropriate to that use case are added. For example, ChemicalSystem contains all of the fields in System, but also adds fields for composition and chemical formula.","tags":"","url":"schema_definition\/system\/index.html"},{"title":"chemical","text":"Chemical systems are specializations of more generic systems that include information about chemical composition.","tags":"","url":"schema_definition\/system\/chemical\/index.html"},{"title":"ChemicalSystem","text":"Description A ChemicalSystem is a specialization of the more generic System type. Chemical systems add information about chemical composition to a system. Fields Field name Value type Description uid String Permanent ID associated with the chemical system. chemicalFormula String Chemical formula of the system. composition Array of Composition objects The elements in the chemical system and their relative atomic and weight percentages. names Array of strings Common names of the chemical system. ids Array of Id objects IDs (named labels) of the chemical system. source Source object Source\/producer\/manufacturer of the chemical system. quantity Quantity object Quantity of the chemical system. properties Array of Property objects Measured or observed properties. preparation Array of ProcessStep objects Process steps carried out in preparing the chemical system. subSystems Array of System objects Subsystems that the chemical system is composed of. references Array of Reference objects References where information about the chemical system is published. contacts Array of Person objects People that can be contacted for further information about the chemical system. licenses Array of License objects Licenses that apply to the data about the chemical system. tags Array of strings Tags that apply to the chemical system. Examples","tags":"","url":"schema_definition\/system\/chemical\/ChemicalSystem.html"},{"title":"common","text":"This package contains objects that are common to all chemical systems.","tags":"","url":"schema_definition\/system\/chemical\/common\/index.html"},{"title":"Composition","text":"Description Information about an element in a chemical system including its type and relative amount. Fields Field name Value type Description element String Name or symbol of the element. actualWeightPercent Scalar object Actual (measured) weight percent of the element. idealWeightPercent Scalar object Ideal (theoretical\/stoichiometric) weight percent of the element. actualAtomicPercent Scalar object Actual (measured) atomic percent of the element. idealAtomicPercent Scalar object Ideal (theoretical\/stoichiometric) atomic percent of the element. tags Array of strings Tags that apply to the composition. Examples","tags":"","url":"schema_definition\/system\/chemical\/common\/Composition.html"},{"title":"System","text":"Description A System object is the most generic representation of a physical system in the PIF schema. All other systems are sub-classed from this type. Fields Field name Value type Description uid String Permanent ID associated with the system. names Array of strings Common names of the system. ids Array of Id objects IDs (named labels) of the system. source Source object Source\/producer\/manufacturer of the system. quantity Quantity object Quantity of the system. properties Array of Property objects Measured or observed properties. preparation Array of ProcessStep objects Process steps carried out in preparing the system. subSystems Array of System objects Subsystems that the system is composed of. references Array of Reference objects References where information about the system is published. contacts Array of Person objects People that can be contacted for further information about the system. licenses Array of License objects Licenses that apply to the data about the system. tags Array of strings Tags that apply to the system. Examples","tags":"","url":"schema_definition\/system\/System.html"}]}